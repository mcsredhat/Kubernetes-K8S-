apiVersion: v1
kind: Pod
metadata:
  annotations:
    description: Nginx web server with security context,owner=web-team
  creationTimestamp: null
  labels:
    app: nginx
    tier: frontend
    version: "1.20"
  name: nginx-web
  namespace: web
spec:
  containers:
  - image: nginx:1.20
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
    name: nginx-web
    ports:
    - containerPort: 8080
      name: http
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 3
    resources:
      limits:
        cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsGroup: 101
      runAsNonRoot: true
      runAsUser: 101
    startupProbe:
      failureThreshold: 30
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 3
      timeoutSeconds: 1
    volumeMounts:
    - mountPath: /etc/nginx/nginx.conf
      name: nginx-config
      readOnly: true
      subPath: nginx.conf
    - mountPath: /var/cache/nginx
      name: nginx-cache
    - mountPath: /var/run
      name: nginx-run
    - mountPath: /var/log/nginx
      name: nginx-logs
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  securityContext:
    fsGroup: 101
    runAsGroup: 101
    runAsNonRoot: true
    runAsUser: 101
    seccompProfile:
      type: RuntimeDefault
  volumes:
  - configMap:
      items:
      - key: nginx.conf
        path: nginx.conf
      name: nginx-config
    name: nginx-config
  - emptyDir: {}
    name: nginx-cache
  - emptyDir: {}
    name: nginx-run
  - emptyDir: {}
    name: nginx-logs
status: {}

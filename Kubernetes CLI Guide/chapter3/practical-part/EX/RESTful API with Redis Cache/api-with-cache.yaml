# ----------------------------
# Redis Deployment
# ----------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
    tier: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      tier: cache
  template:
    metadata:
      labels:
        app: redis
        tier: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 5

---
# ----------------------------
# API Deployment
# ----------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  labels:
    app: api
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
      tier: backend
  template:
    metadata:
      labels:
        app: api
        tier: backend
    spec:
      containers:
      - name: api
        image: farajassulai/flask-python-app:production@sha256:c09decceba7dcf6521f453abb685fef457890d3ea3041c798f20001098696a7b
        env:
        - name: REDIS_HOST
          value: redis-service
        - name: REDIS_PORT
          value: "6379"
        - name: FLASK_ENV
          value: production
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5

---
# ----------------------------
# Redis Service
# ----------------------------
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  labels:
    app: redis
    tier: cache
spec:
  selector:
    app: redis
    tier: cache
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP

---
# ----------------------------
# API Service
# ----------------------------
apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    app: api
    tier: backend
spec:
  selector:
    app: api
    tier: backend
  ports:
  - port: 80
    targetPort: 5000
  type: LoadBalancer


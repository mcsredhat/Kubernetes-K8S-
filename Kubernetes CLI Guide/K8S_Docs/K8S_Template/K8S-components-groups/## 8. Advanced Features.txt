## 8. Advanced Features

### MutatingWebhookConfiguration
**Description:** Intercept and modify API requests (e.g., inject sidecars)
**Use Case:** Automatic sidecar injection, resource modification

```yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: example-mutatingwebhook
  labels:
    webhook: mutating
  annotations:
    description: "Mutate pods on create"
webhooks:
- name: example.mutating.webhook
  admissionReviewVersions: ["v1"]
  sideEffects: None
  clientConfig:
    service:
      name: webhook-service
      namespace: example-namespace
      path: "/mutate"
      port: 443
    caBundle: LS0tLS1CRUdJTi... # Base64 CA cert
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
    scope: "Namespaced"
  failurePolicy: Fail
  timeoutSeconds: 10
  objectSelector:
    matchLabels:
      mutate: "true"
  namespaceSelector:
    matchLabels:
      webhook-enabled: "true"
```

**Apply Example:**
```bash
kubectl apply -f mutatingwebhook.yaml
kubectl get mutatingwebhookconfigurations
```

**Customization Notes:**
- Always set `failurePolicy: Fail` for critical policies
- Deploy webhook service with proper TLS
- Test with non-production namespaces first

---

### ValidatingWebhookConfiguration
**Description:** Validate API requests before storage
**Use Case:** Policy enforcement, resource validation

```yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: example-validatingwebhook
  labels:
    webhook: validating
  annotations:
    description: "Validate pod resources"
webhooks:
- name: example.validating.webhook
  admissionReviewVersions: ["v1"]
  sideEffects: None
  clientConfig:
    service:
      name: webhook-service
      namespace: example-namespace
      path: "/validate"
      port: 443
    caBundle: LS0tLS1CRUdJTi...
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
    scope: "Namespaced"
  failurePolicy: Fail
  timeoutSeconds: 5
  objectSelector:
    matchLabels:
      validate: "true"
  namespaceSelector:
    matchLabels:
      validation: "enabled"
```

**Apply Example:**
```bash
kubectl apply -f validatingwebhook.yaml
kubectl logs -l app=webhook-server -n example-namespace
```

---

### CustomResourceDefinition
**Description:** Extend Kubernetes API with custom resource types
**Use Case:** Operators, domain-specific resources

```yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: examples.example.com
  labels:
    crd: custom
  annotations:
    description: "Custom Example resource"
spec:
  group: example.com
  versions:
  - name: v1
    served: true
    storage: true
    deprecated: false
    schema:
      openAPIV3Schema:
        type: object
        required: ["spec"]
        properties:
          metadata:
            type: object
          spec:
            type: object
            required: ["size"]
            properties:
              size:
                type: integer
                minimum: 1
                maximum: 10
              replicas:
                type: integer
                default: 1
                minimum: 1
              image:
                type: string
                default: "nginx:1.21"
          status:
            type: object
            properties:
              availableReplicas:
                type: integer
              currentImage:
                type: string
    additionalPrinterColumns:
    - name: Size
      type: integer
      jsonPath: .spec.size
    - name: Replicas
      type: integer
      jsonPath: .spec.replicas
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
  scope: Namespaced
  names:
    plural: examples
    singular: example
    kind: Example
    shortNames:
    - ex
```

**Apply Example:**
```bash
kubectl apply -f crd.yaml
kubectl get crd
kubectl api-resources | grep example
```

---

# ============================================================================
# 05-deployment.yaml - Main Application Deployment (FULLY CORRECTED)
# ============================================================================
# Purpose: Deploys the main application with enhanced security and reliability
# Dependencies: Namespace, RBAC, ConfigMap, Secret, PVC must exist
# FIXES: Proper chown in init container, increased resource limits
# ============================================================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-deployment
  namespace: myapp-prod
  labels:
    app: myapp
    app.kubernetes.io/name: myapp
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: myapp
    app.kubernetes.io/version: v1.0.0
    version: v1.0
    environment: production
  annotations:
    description: "Main myapp deployment with enhanced security and monitoring"
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 3
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  selector:
    matchLabels:
      app: myapp
      app.kubernetes.io/name: myapp
      version: v1.0
  template:
    metadata:
      labels:
        app: myapp
        app.kubernetes.io/name: myapp
        app.kubernetes.io/component: application
        app.kubernetes.io/part-of: myapp
        app.kubernetes.io/version: v1.0.0
        version: v1.0
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        kubectl.kubernetes.io/restartedAt: ""
    spec:
      serviceAccountName: myapp-sa
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      
      # CORRECTED: Pod-level security context without runAsNonRoot
      securityContext:
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups: [101]
      
      nodeSelector:
        kubernetes.io/os: linux
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: [myapp]
              topologyKey: kubernetes.io/hostname
      
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: myapp
      
      initContainers:
      - name: setup
        image: busybox:1.36
        command: ['sh', '-c']
        args:
        - |
          set -e
          
          echo "=== myapp Initialization Started ==="
          echo "Running as user: $(id -u), group: $(id -g)"
          
          # Create necessary directories in the shared volume
          mkdir -p /usr/share/nginx/html/logs
          mkdir -p /usr/share/nginx/html/cache
          mkdir -p /usr/share/nginx/html/uploads
          
          # Copy static content to nginx html directory
          if [ -f /static-source/index.html ]; then
            cp /static-source/index.html /usr/share/nginx/html/
            echo "✓ Copied index.html to nginx document root"
          else
            echo "⚠ Warning: index.html not found in static source"
          fi
          
          # CORRECTED: Explicitly set ownership to nginx user (101:101)
          echo "Setting ownership to 101:101..."
          chown -R 101:101 /usr/share/nginx/html
          
          # Set proper permissions
          chmod -R 755 /usr/share/nginx/html
          chmod -R 775 /usr/share/nginx/html/logs
          chmod -R 775 /usr/share/nginx/html/cache
          chmod -R 775 /usr/share/nginx/html/uploads
          
          echo "=== Initialization completed ==="
          ls -la /usr/share/nginx/html
          echo "Ownership verification:"
          ls -ln /usr/share/nginx/html | head -5
        volumeMounts:
        - name: nginx-html
          mountPath: /usr/share/nginx/html
        - name: static-content
          mountPath: /static-source
          readOnly: true
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          runAsNonRoot: false
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
            add: ["CHOWN", "FOWNER", "DAC_OVERRIDE"]
          seccompProfile:
            type: RuntimeDefault
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      
      containers:
      - name: myapp
        image: nginx:1.25-alpine
        imagePullPolicy: IfNotPresent
        
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
        env:
        - name: APP_NAME
          value: "myapp"
        - name: ENVIRONMENT
          value: "production"
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        
        envFrom:
        - configMapRef:
            name: myapp-config
        - secretRef:
            name: myapp-secret
        
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: nginx-html
          mountPath: /usr/share/nginx/html
        - name: app-data
          mountPath: /data
        - name: tmp-storage
          mountPath: /tmp
        - name: var-cache-nginx
          mountPath: /var/cache/nginx
        - name: var-log-nginx
          mountPath: /var/log/nginx
        - name: var-run
          mountPath: /var/run
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "2Gi"
            cpu: "1000m"
            ephemeral-storage: "5Gi"
        
        securityContext:
          runAsUser: 101
          runAsGroup: 101
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop: ["ALL"]
            add: ["NET_BIND_SERVICE"]
          seccompProfile:
            type: RuntimeDefault
        
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 12
          successThreshold: 1
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        lifecycle:
          preStop:
            exec:
              command: 
              - /bin/sh
              - -c
              - |
                echo "Graceful shutdown initiated..."
                nginx -s quit
                sleep 15
      
      volumes:
      - name: nginx-config
        configMap:
          name: myapp-config
          items:
          - key: nginx.conf
            path: nginx.conf
            mode: 0644
      
      - name: static-content
        configMap:
          name: myapp-static
          defaultMode: 0644
      
      - name: nginx-html
        emptyDir:
          sizeLimit: 1Gi
      
      - name: app-data
        persistentVolumeClaim:
          claimName: myapp-data-pvc
      
      - name: tmp-storage
        emptyDir:
          medium: Memory
          sizeLimit: 256Mi
      
      - name: var-log-nginx
        emptyDir:
          sizeLimit: 1Gi
      
      - name: var-cache-nginx
        emptyDir:
          sizeLimit: 100Mi
      
      - name: var-run
        emptyDir:
          sizeLimit: 10Mi

---
# Backend Deployment - CORRECTED
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-backend
  namespace: myapp-prod
  labels:
    app: myapp-backend
    app.kubernetes.io/name: myapp-backend
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp-backend
      app.kubernetes.io/name: myapp-backend
  template:
    metadata:
      labels:
        app: myapp-backend
        app.kubernetes.io/name: myapp-backend
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: myapp
    spec:
      serviceAccountName: myapp-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: backend
        image: node:18-alpine
        ports:
        - name: http
          containerPort: 8080
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
            ephemeral-storage: "500Mi"
          limits:
            memory: "1Gi"
            cpu: "500m"
            ephemeral-storage: "2Gi"
        envFrom:
        - configMapRef:
            name: myapp-config
        - secretRef:
            name: myapp-secret
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/.cache
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      - name: cache
        emptyDir:
          sizeLimit: 100Mi
# ============================================================================
# values.env - Production-Ready Configuration (FULLY CORRECTED)
# ============================================================================
# Purpose: Centralized configuration for Kubernetes deployment
# Usage: Review and modify all values before deployment
# CRITICAL: Change ALL default passwords before production deployment
# Format: Uses KEY=VALUE format for shell sourcing (not YAML)
# ============================================================================

# BASIC APPLICATION CONFIGURATION
APP_NAME=myapp
NAMESPACE=myapp-prod
ENVIRONMENT=production
TEAM=platform
DOMAIN=farajassulai.mygamesonline.org

# SCALING CONFIGURATION
REPLICAS=3
BACKEND_REPLICAS=2
MAX_REPLICAS=20

# CONTAINER IMAGES
IMAGE=nginx:1.25-alpine
BACKEND_IMAGE=node:18-alpine

# STORAGE CONFIGURATION
# IMPORTANT: Verify storage class exists in your cluster first!
# Run: kubectl get storageclass
# Common values: gp3 (AWS), standard/pd-ssd (GCP), managed-premium (Azure)
STORAGE_CLASS=gp3
STORAGE_SIZE=20Gi
BACKUP_STORAGE_SIZE=50Gi

# CLOUD PROVIDER CONFIGURATION
# Set to: aws, gcp, or azure (required for volume snapshots)
CLOUD_PROVIDER=aws

# AWS CONFIGURATION (if using AWS)
KMS_KEY_ID=

# GCP CONFIGURATION (if using GCP)
GCP_KMS_KEY=
PROJECT_ID=

# BACKUP CONFIGURATION
BACKUP_SCHEDULE="0 2 * * *"
SNAPSHOT_SCHEDULE="0 1 * * 0"
BACKUP_RETENTION_DAYS=7
SNAPSHOT_RETENTION=4

# ============================================================================
# SECURITY CREDENTIALS - CRITICAL: CHANGE ALL VALUES BELOW
# ============================================================================
# WARNING: These are example values and MUST be changed before deployment
# Use strong, randomly generated passwords in production
# Generate with: openssl rand -base64 32
# ============================================================================

# Database credentials (minimum 16 characters for production)
DATABASE_USERNAME=myapp_user
DATABASE_PASSWORD=CHANGE_ME_STRONG_PASSWORD_HERE_123456789

# API security (minimum 32 characters)
API_KEY=CHANGE_ME_API_KEY_abcdef123456789012345678

# JWT configuration (must be at least 32 characters)
JWT_SECRET=CHANGE_ME_32_CHAR_JWT_SECRET_KEY_12345678901234

# Encryption key (must be at least 32 characters)
ENCRYPTION_KEY=CHANGE_ME_32_CHAR_ENCRYPTION_KEY_1234567890

# Monitoring credentials
GRAFANA_ADMIN_PASSWORD=CHANGE_ME_GRAFANA_PASSWORD_123

# Redis configuration (if using Redis)
REDIS_PASSWORD=CHANGE_ME_REDIS_PASSWORD_123456789
REDIS_URL=redis://:CHANGE_ME_REDIS_PASSWORD_123456789@redis.myapp-prod.svc.cluster.local:6379/0

# NOTE: DATABASE_URL is automatically constructed in 03-secrets-config.yaml
# from DATABASE_USERNAME, DATABASE_PASSWORD, and other variables above.
# Do not set it here manually.

# ============================================================================
# DEPLOYMENT CHECKLIST
# ============================================================================
# Before deploying to production, ensure:
# 
# [ ] All passwords have been changed from defaults
# [ ] Passwords meet minimum length requirements (16+ chars)
# [ ] DOMAIN is set to your actual domain
# [ ] DNS is configured and points to your ingress
# [ ] STORAGE_CLASS verified: kubectl get storageclass
# [ ] CLOUD_PROVIDER is set correctly (aws, gcp, or azure)
# [ ] cert-manager is installed: kubectl get crd certificates.cert-manager.io
# [ ] ingress-nginx controller is installed
# [ ] metrics-server is installed (for HPA)
# [ ] kubectl is configured to connect to your cluster
# [ ] You have reviewed all resource limits
# [ ] Backup schedules are appropriate for your needs
# [ ] Network policies match your security requirements
# [ ] Run validation: ./deploy.sh check-prereqs
# 
# To generate strong passwords:
#   openssl rand -base64 32
# 
# To verify prerequisites:
#   ./deploy.sh check-prereqs
# 
# To deploy:
#   ./deploy.sh deploy
# 
# To check status:
#   ./deploy.sh status
# ============================================================================
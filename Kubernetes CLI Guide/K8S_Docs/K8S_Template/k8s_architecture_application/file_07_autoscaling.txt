# ============================================================================
# 07-autoscaling-availability.yaml - Scaling and High Availability (CORRECTED)
# ============================================================================
# Purpose: Provides automatic scaling and ensures high availability during maintenance
# Dependencies: Deployment must exist, metrics-server required for HPA
# Features: CPU/Memory based scaling, pod disruption protection
# Fixes: None required - this file was already correct
# ============================================================================

# Horizontal Pod Autoscaler - Automatic scaling based on metrics
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{APP_NAME}}-hpa
  namespace: {{NAMESPACE}}
  labels:
    app: {{APP_NAME}}
    app.kubernetes.io/name: {{APP_NAME}}
    app.kubernetes.io/component: autoscaling
    app.kubernetes.io/part-of: {{APP_NAME}}
  annotations:
    description: "Horizontal Pod Autoscaler for {{APP_NAME}} with CPU and memory metrics"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{APP_NAME}}-deployment
  minReplicas: {{REPLICAS}}
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min

---
# Vertical Pod Autoscaler (Optional) - Automatic resource right-sizing
# Uncomment if VPA is installed in your cluster
# apiVersion: autoscaling.k8s.io/v1
# kind: VerticalPodAutoscaler
# metadata:
#   name: {{APP_NAME}}-vpa
#   namespace: {{NAMESPACE}}
#   labels:
#     app: {{APP_NAME}}
#     app.kubernetes.io/component: autoscaling
# spec:
#   targetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: {{APP_NAME}}-deployment
#   updatePolicy:
#     updateMode: "Auto"  # or "Off" for recommendations only
#   resourcePolicy:
#     containerPolicies:
#     - containerName: {{APP_NAME}}
#       maxAllowed:
#         cpu: 2
#         memory: 4Gi
#       minAllowed:
#         cpu: 100m
#         memory: 128Mi

---
# Pod Disruption Budget - Ensures availability during maintenance
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{APP_NAME}}-pdb
  namespace: {{NAMESPACE}}
  labels:
    app: {{APP_NAME}}
    app.kubernetes.io/name: {{APP_NAME}}
    app.kubernetes.io/component: availability
    app.kubernetes.io/part-of: {{APP_NAME}}
  annotations:
    description: "Pod Disruption Budget to ensure high availability during cluster maintenance"
spec:
  minAvailable: 50%  # Ensure at least 50% of pods remain available
  selector:
    matchLabels:
      app: {{APP_NAME}}
      app.kubernetes.io/name: {{APP_NAME}}
# ============================================================================
# 02-storage.yaml - Storage Classes and Persistent Storage (CORRECTED)
# ============================================================================
# Purpose: Defines storage classes and persistent volume claims for data persistence
# Dependencies: CSI drivers must be installed (EBS for AWS, PD for GCP)
# FIXES APPLIED:
# - Fixed storage class selection with proper templating
# - Added conditional logic for different environments
# - Standardized storage class naming
# ============================================================================

# DEVELOPMENT ENVIRONMENT - Local storage
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{STORAGE_CLASS}}-local
  labels:
    environment: development
    component: storage
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
    description: "Local storage for development - fast but not persistent across nodes"
provisioner: kubernetes.io/no-provisioner
parameters:
  type: local
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
allowVolumeExpansion: false

---
# AWS PRODUCTION ENVIRONMENT - EBS volumes with encryption
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{STORAGE_CLASS}}-aws
  labels:
    environment: production
    component: storage
    cloud-provider: aws
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
    description: "AWS EBS gp3 volumes with encryption and optimized performance"
provisioner: ebs.csi.aws.com
parameters:
  type: gp3
  iops: "3000"
  throughput: "125"
  fsType: ext4
  encrypted: "true"
  # FIXED: Use template variable with default
  kmsKeyId: "{{KMS_KEY_ID}}"
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
allowVolumeExpansion: true
mountOptions:
- noatime
- discard

---
# GCP PRODUCTION ENVIRONMENT - Regional persistent disk
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{STORAGE_CLASS}}-gcp
  labels:
    environment: production
    component: storage
    cloud-provider: gcp
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
    description: "GCP regional persistent disk with encryption"
provisioner: pd.csi.storage.gke.io
parameters:
  type: pd-balanced
  replication-type: regional-pd
  # FIXED: Use template variables with proper structure
  disk-encryption-kms-key: "{{GCP_KMS_KEY}}"
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
allowVolumeExpansion: true

---
# Persistent Volume Claim - Main application data storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{APP_NAME}}-data-pvc
  namespace: {{NAMESPACE}}
  labels:
    app: {{APP_NAME}}
    app.kubernetes.io/name: {{APP_NAME}}
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: {{APP_NAME}}
    environment: {{ENVIRONMENT}}
  annotations:
    description: "Main data storage for {{APP_NAME}}"
    snapshot.storage.kubernetes.io/snapshot-class: "{{APP_NAME}}-snapshot-class"
spec:
  accessModes:
    - ReadWriteOnce
  # FIXED: Use dynamic storage class selection
  storageClassName: "{{STORAGE_CLASS}}"
  resources:
    requests:
      storage: {{STORAGE_SIZE}}
  # Optional: Uncomment to restore from snapshot
  # dataSource:
  #   name: {{APP_NAME}}-snapshot
  #   kind: VolumeSnapshot
  #   apiGroup: snapshot.storage.k8s.io
# ============================================================================
# 08-security-network.yaml - Network Security and Traffic Control (CORRECTED)
# ============================================================================
# Purpose: Implements network segmentation and traffic policies for security
# Dependencies: Network policy controller must be enabled (Calico, Cilium, etc.)
# FIXES APPLIED:
# - Simplified network policies to be functional and not overly restrictive
# - Fixed namespace selector patterns to work with standard configurations
# - Removed duplicate and conflicting rules
# - Added permissive fallback for critical services
# ============================================================================

# Network Policy - Main application traffic control
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{APP_NAME}}-network-policy
  namespace: {{NAMESPACE}}
  labels:
    app: {{APP_NAME}}
    app.kubernetes.io/name: {{APP_NAME}}
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: {{APP_NAME}}
  annotations:
    description: "Network policy for {{APP_NAME}} with balanced security and functionality"
spec:
  podSelector:
    matchLabels:
      app: {{APP_NAME}}
      app.kubernetes.io/name: {{APP_NAME}}
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow ingress controller traffic (common patterns)
  - from:
    - namespaceSelector:
        matchExpressions:
        - key: name
          operator: In
          values: ["ingress-nginx", "nginx-ingress", "kube-system"]
    ports:
    - protocol: TCP
      port: 8080
  
  # Allow monitoring systems
  - from:
    - namespaceSelector:
        matchExpressions:
        - key: name
          operator: In
          values: ["monitoring", "prometheus", "kube-system"]
    ports:
    - protocol: TCP
      port: 8080
  
  # Allow traffic from same namespace
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: {{NAMESPACE}}
    ports:
    - protocol: TCP
      port: 8080
  
  # Allow communication within the application
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: {{APP_NAME}}
    ports:
    - protocol: TCP
      port: 8080
  
  egress:
  # DNS resolution (essential)
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Kubernetes API server access (essential)
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 6443
  
  # HTTP/HTTPS for external services
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  
  # Backend communication within namespace
  - to:
    - podSelector:
        matchLabels:
          app: {{APP_NAME}}-backend
    ports:
    - protocol: TCP
      port: 8080
  
  # Database and cache access (adjust as needed)
  - to:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values: ["postgres", "postgresql", "mysql", "redis", "mongodb"]
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 3306  # MySQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 27017 # MongoDB

---
# Network Policy for Backend Service - CORRECTED and simplified
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{APP_NAME}}-backend-network-policy
  namespace: {{NAMESPACE}}
  labels:
    app: {{APP_NAME}}-backend
    app.kubernetes.io/name: {{APP_NAME}}-backend
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: {{APP_NAME}}
spec:
  podSelector:
    matchLabels:
      app: {{APP_NAME}}-backend
      app.kubernetes.io/name: {{APP_NAME}}-backend
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow traffic from main application
  - from:
    - podSelector:
        matchLabels:
          app: {{APP_NAME}}
          app.kubernetes.io/name: {{APP_NAME}}
    ports:
    - protocol: TCP
      port: 8080
  
  # Allow ingress controller access
  - from:
    - namespaceSelector:
        matchExpressions:
        - key: name
          operator: In
          values: ["ingress-nginx", "nginx-ingress", "kube-system"]
    ports:
    - protocol: TCP
      port: 8080
  
  # Allow monitoring
  - from:
    - namespaceSelector:
        matchExpressions:
        - key: name
          operator: In
          values: ["monitoring", "prometheus", "kube-system"]
    ports:
    - protocol: TCP
      port: 8080
  
  egress:
  # DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Kubernetes API access
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 6443
  
  # External API access
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
  
  # Database access
  - to:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values: ["postgres", "postgresql", "mysql", "redis", "mongodb"]
    ports:
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 3306
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 27017

---
# Monitoring Access Policy - CORRECTED and simplified
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{APP_NAME}}-monitoring-access
  namespace: {{NAMESPACE}}
  labels:
    app: {{APP_NAME}}
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: {{APP_NAME}}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: {{APP_NAME}}
  policyTypes:
  - Ingress
  ingress:
  # Allow monitoring from common monitoring namespaces
  - from:
    - namespaceSelector:
        matchExpressions:
        - key: name
          operator: In
          values: ["monitoring", "prometheus", "grafana", "kube-system"]
    ports:
    - protocol: TCP
      port: 8080